// Init libs
var ROSLIB = require('roslib');
var Helpers = require('../helpers');
var SatPosition = require('../dron_ros_tutorial/SatPosition');
// Solidity message definition
var bytecode = '606060405260405160608060e083395060c06040525160805160a051600080546201000084026201000060b060020a031961ffff1990921686179190911617905560018054600160a060020a03191682179055505050607f8060616000396000f3606060405260e060020a60003504635001f3b58114602e57806390797634146045578063b269681d146051575b005b6062600054620100009004600160a060020a031681565b607560005461ffff1681565b6062600154600160a060020a031681565b600160a060020a03166060908152602090f35b6060908152602090f3';
var abi = [{"constant":true,"inputs":[],"name":"base","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"ident","outputs":[{"name":"","type":"uint16"}],"type":"function"},{"constant":true,"inputs":[],"name":"destination","outputs":[{"name":"","type":"address"}],"type":"function"},{"inputs":[{"name":"_ident","type":"uint16"},{"name":"_base","type":"address"},{"name":"_destination","type":"address"}],"type":"constructor"}];
// JSON message converter
function eth2json(address, web3) {
    var msg = Helpers.getContract(abi, address, web3);
    return {
        // Message fields START
        ident: parseInt(msg.ident()),
        base: SatPosition.eth2json(msg.base(), web3),
        destination: SatPosition.eth2json(msg.destination(), web3)
        // Message fields END
    }
}
// Setup exports
module.exports = {
/*
 * This message converter should be autogenerated from
 * ROS message definition language.
 * TODO: converter implementation.
 */
    abi: abi,
    eth2json: eth2json,
    eth2ros: function(msg, web3) {return new ROSLIB.Message(eth2json(msg, web3))},
    ros2eth: function(msg, web3, fun) {
    var ident = msg.ident;
    SatPosition.ros2eth(msg.base, web3, function(e, base) {
        SatPosition.ros2eth(msg.destination, web3, function(e, destination) {
            var args = [ident,base,destination];
            Helpers.newContract(abi, bytecode, web3, args, fun);
        });
    });
}
}
