// Init libs
var ROSLIB = require('roslib');
var Helpers = require('../helpers');
// Solidity data
var bytecode = '0x6060604052341561000c57fe5b6040516020806100dc833981016040528080519060200190919050505b80600081600019169055505b505b6097806100456000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806373d4a13a14603a575bfe5b3415604157fe5b60476065565b60405180826000191660001916815260200191505060405180910390f35b600054815600a165627a7a723058203f47702dc0696a67fc75c9a9a9c2db286b23bf7c19f0530a341a0fb80c6e50960029';
var abi = [{"constant":true,"inputs":[],"name":"data","outputs":[{"name":"","type":"bytes32"}],"payable":false,"type":"function"},{"inputs":[{"name":"_data","type":"bytes32"}],"payable":false,"type":"constructor"}]; 
// JSON serialization
function eth2json(address, web3) {
    var msg = Helpers.getContract(abi, address, web3);
    return {data: msg.data()}
}
// Setup exports
module.exports = {
/*
 * This message converter should be autogenerated from
 * ROS message definition language.
 * TODO: converter implementation.
 */
    abi: abi,
    eth2json: eth2json,
    eth2ros: function(msg, web3) {return new ROSLIB.Message(eth2json(msg, web3))},
    ros2eth: function(msg, web3, fun) {
        //
        var msg_data = '0x'+msg.data;
        var args = [msg_data];
        //
        Helpers.newContract(abi, bytecode, web3, args, fun);
}
}
